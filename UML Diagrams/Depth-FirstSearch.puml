@startuml
class DepthFirstSearch {
    - static int maxCaptures
    - static ArrayList<Turn> result

    + static void dfs(GameState g, Piece piece, Turn currentTurn, int captureCount)
    + static ArrayList<Turn> getResult()
    + static void resetResult()
    + static void resetMaxCaptures()
}

class GameState {
    + ArrayList<Move> getCaptures(Piece piece)
    + void move(Move move)
    + void undoMove(Move move)
    + Piece getPiece(int x, int y)
}

class Turn {
    + void addMove(Move move)
    + void removeLastMove()
    + ArrayList<Move> getMoves()
}

class Move {
    + void setTurnEnding(boolean isEnding)
}

class Piece {
}

DepthFirstSearch --> GameState : uses
DepthFirstSearch --> Turn : uses
DepthFirstSearch --> Move : uses
GameState --> Move : interacts
GameState --> Piece : interacts
Turn --> Move : contains
@enduml
